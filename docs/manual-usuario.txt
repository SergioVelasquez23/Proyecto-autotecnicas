ðŸ“˜ MANUAL DE USUARIO â€“ Universo Algoritmos
1. IntroducciÃ³n
Universo Algoritmos es una herramienta educativa compuesta por dos mÃ³dulos que enseÃ±an algoritmos mediante experiencias interactivas:

MisiÃ³n Interestelar: Simula planificaciÃ³n de rutas espaciales usando backtracking.

Sintaxis GalÃ¡ctica: Valida datos como direcciones IPv4 y tarjetas de crÃ©dito mediante autÃ³matas finitos deterministas (AFD).

2. Requisitos del Sistema
MÃ­nimos
Navegador: Chrome 80+, Firefox 75+, Safari 13+, Edge 80+

SO: Windows 10 / macOS 10.15+ / Ubuntu 18.04+

RAM: 4 GB

Almacenamiento: 100 MB libres

Recomendados
Navegador actualizado (Chrome/Firefox)

RAM: 8 GB

ResoluciÃ³n: 1920x1080

Procesador: Intel i5 / AMD Ryzen 5

3. InstalaciÃ³n
Clona el repositorio:

bash
Copiar
Editar
git clone https://github.com/SergioVelasquez23/Proyecto-autotecnicas.git
Entra a la carpeta:

bash
Copiar
Editar
cd Proyecto-autotecnicas
Abre el archivo index.html con tu navegador o usa Live Server desde VSCode.

4. Uso del MÃ³dulo 1 â€“ MisiÃ³n Interestelar
a. Acceso
Desde index.html, haz clic en "MÃ³dulo 1: MisiÃ³n Interestelar".

b. Cargar Universo
Usa el archivo data/universo.json.

Sube el archivo y haz clic en "Cargar Universo".

c. ConfiguraciÃ³n
El sistema carga automÃ¡ticamente origen, destino, energÃ­a inicial, matriz energÃ©tica.

Puedes elegir el algoritmo y activar visualizaciÃ³n animada.

d. Ejecutar y Ver Resultados
Haz clic en "Buscar Ruta".

Se mostrarÃ¡ visualizaciÃ³n grÃ¡fica, progreso y estadÃ­sticas.

e. InterpretaciÃ³n
Coordenadas de la ruta

EnergÃ­a consumida

Tiempo de ejecuciÃ³n

Celdas visitadas

5. Uso del MÃ³dulo 2 â€“ Sintaxis GalÃ¡ctica
a. Acceso
Haz clic en "MÃ³dulo 2: Sintaxis GalÃ¡ctica".

b. Preparar archivo de datos
Usa ejemplo.txt como guÃ­a.

Escribe lÃ­neas con IPv4 o tarjetas de crÃ©dito vÃ¡lidas.

c. ValidaciÃ³n
Sube el archivo.

Haz clic en "Validar".

Se mostrarÃ¡ si cada lÃ­nea es vÃ¡lida o no, con descripciÃ³n de errores.

6. ResoluciÃ³n de Problemas
Error al cargar universo: Verifica el formato del archivo JSON.

Ruta no encontrada: Verifica obstÃ¡culos o energÃ­a insuficiente.

Validaciones incorrectas: Revisa la sintaxis exacta de las cadenas.

7. Preguntas Frecuentes (FAQ)
Â¿Puedo crear mis propios mapas?
SÃ­, editando el archivo JSON con la misma estructura.

Â¿QuÃ© pasa si pongo direcciones IPv6?
El sistema solo admite IPv4 por ahora.

Â¿Necesito conexiÃ³n a internet para usarlo?
Solo para la descarga inicial, luego puede funcionar offline.

ðŸ”§ MANUAL TÃ‰CNICO â€“ Universo Algoritmos
1. Estructura del Proyecto
pgsql
Copiar
Editar
Proyecto-autotecnicas/
â”œâ”€â”€ index.html
â”œâ”€â”€ modulo1-mision-interestelar/
â”‚   â”œâ”€â”€ main.js
â”‚   â””â”€â”€ estilo.css
â”œâ”€â”€ modulo2-sintaxis-galactica/
â”‚   â”œâ”€â”€ validador.js
â”‚   â””â”€â”€ estilo.css
â”œâ”€â”€ data/
â”‚   â””â”€â”€ universo.json
â”œâ”€â”€ docs/
â”‚   â””â”€â”€ manual.pdf
â””â”€â”€ ejemplo.txt
2. Detalles TÃ©cnicos â€“ MÃ³dulo 1
Algoritmo
Implementa backtracking.

Se permite la visualizaciÃ³n paso a paso.

Se calcula costo energÃ©tico en una matriz 40x40.

JSON de entrada (universo.json)
origen: Coordenadas iniciales

destino: Coordenadas objetivo

obstaculos: Lista de coordenadas bloqueadas

celdasCargaRequerida: Celdas con costo extra

cargaInicial: EnergÃ­a total

matrizInicial: Matriz energÃ©tica del universo

LÃ³gica
El algoritmo explora rutas posibles y almacena estadÃ­sticas como nodos explorados, tiempo, etc.

Se usa JavaScript puro para control del DOM y animaciones.

3. Detalles TÃ©cnicos â€“ MÃ³dulo 2
Validaciones
Usa autÃ³matas finitos deterministas para:

Direcciones IPv4: ValidaciÃ³n de 4 octetos, sin ceros a la izquierda.

Tarjetas de crÃ©dito: ValidaciÃ³n de formato y rangos (MM/AAAA, CVV).

Regex (expresiones regulares) clave
IPv4: /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|...)$/

Tarjeta: /^\d{4} \d{4} \d{4} \d{4} \d{2}\/\d{4} \d{3}$/

4. Recomendaciones de Desarrollo
Usar VSCode con Live Server para desarrollo.

Modularizar el cÃ³digo JS para escalabilidad.

Separar lÃ³gica de UI y lÃ³gica de procesamiento en archivos distintos.

Validar los archivos JSON con jsonlint.com.